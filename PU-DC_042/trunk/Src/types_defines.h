
/******************************************************************************/
/**
 * \file    xxx.h
 * 
 * \author  
 *
 * \date    11.03.2014
 * 
 * \brief   
 * 
 * \details           
 *
 * ÎÎÎ "XXX", 2014. Âñå ïğàâà çàùèùåíû.
 *
 ******************************************************************************/

#ifndef __TYPES_DEFS_H__
#define __TYPES_DEFS_H__

/******************************************************************************/
/*                             ÇÀÃÎËÎÂÎ×ÍÛÅ ÔÀÉËÛ                             */
/******************************************************************************/

#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <stdlib.h>

/******************************************************************************/
/*                         ÃËÎÁÀËÜÍÛÅ ÌÀÊĞÎÎÏĞÅÄÅËÅÍÈß                        */
/******************************************************************************/

#ifndef MAX
    #define MAX(x, y) ((x) > (y) ? x : y)
#endif
    
#ifndef MIN
    #define MIN(x, y) ((x) < (y) ? x : y)
#endif

#define HI(x) ((uint8_t)(x>>8))
#define LO(x) ((uint8_t)(x))

#define BYTE_0(x) ((uint8_t)(x))
#define BYTE_1(x) ((uint8_t)(x>>8))
#define BYTE_2(x) ((uint8_t)(x>>16))
#define BYTE_3(x) ((uint8_t)(x>>24))

#ifndef BIT
    #define BIT(x)    (1 << (x))
#endif

#ifndef offsetof
    #define offsetof(s,m)           (size_t)&(((s *)0)->m)
#endif

#ifndef countof
    #define countof(a)              (sizeof(a) / sizeof(*(a)))
#endif

#ifndef alignof
    #define alignof(type)           offsetof(struct { char c; type member; }, member)
#endif

#ifndef TRUE
    #define TRUE    1
#endif

#ifndef FALSE
    #define FALSE   0
#endif

#ifndef NULL
    #define NULL  (void *)0
#endif

// Êîğîòêèå èìåíà òèïîâ
typedef int8_t   S08;
typedef int16_t  S16;
typedef int32_t  S32;
typedef int64_t  S64;
typedef uint8_t  U08;
typedef uint16_t U16;
typedef uint32_t U32;
typedef uint64_t U64;

/******************************************************************************/
/*                            ÃËÎÁÀËÜÍÛÅ ÒÈÏÛ ÄÀÍÍÛÕ                          */
/******************************************************************************/
    
/******************************************************************************/
/*                              ÃËÎÁÀËÜÍÛÅ ÄÀÍÍÛÅ                             */
/******************************************************************************/
                                                                              
/******************************************************************************/
/*                         ÏĞÎÒÎÒÈÏÛ ÃËÎÁÀËÜÍÛÕ ÔÓÍÊÖÈÉ                       */
/******************************************************************************/

#endif

/******************************************************************************/
/*                                   ÊÎÍÅÖ ÔÀÉËÀ                              */
/******************************************************************************/
